services:
  frontend:
    image: ghcr.io/mateusznowakdev/solar/frontend:1.11.1
    build:
      dockerfile: config/frontend/Dockerfile
    deploy:
      restart_policy:
        condition: any
        delay: 5s
    healthcheck:
      test: [ "CMD-SHELL", "curl -L -A docker-healthcheck -f http://localhost" ]
      interval: 15s
      timeout: 5s
      retries: 2
    logging:
      driver: journald

  backend:
    image: ghcr.io/mateusznowakdev/solar/backend:1.11.1
    build:
      dockerfile: config/backend/Dockerfile
    deploy:
      restart_policy:
        condition: any
        delay: 5s
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
    healthcheck:
      test: [ "CMD-SHELL", "curl -L -A docker-healthcheck -f http://localhost/api/" ]
      interval: 15s
      timeout: 5s
      retries: 2
    logging:
      driver: journald

  communicator:
    image: ghcr.io/mateusznowakdev/solar/backend:1.11.1
    build:
      dockerfile: config/backend/Dockerfile
    command: python manage.py run_communicator
    deploy:
      restart_policy:
        condition: any
        delay: 5s
    devices:
      - /dev:/dev
    env_file:
      - .env
    environment:
      - MQTT_BROKER=mqtt
      - POSTGRES_HOST=db
    logging:
      driver: journald
    privileged: true

  transformer:
    image: ghcr.io/mateusznowakdev/solar/backend:1.11.1
    build:
      dockerfile: config/backend/Dockerfile
    command: python manage.py run_transformer
    deploy:
      restart_policy:
        condition: any
        delay: 5s
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
    logging:
      driver: journald

  db:
    image: ghcr.io/mateusznowakdev/solar/db:1.11.1
    build:
      dockerfile: config/db/Dockerfile
    deploy:
      restart_policy:
        condition: any
        delay: 5s
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 1s
      retries: 2
    logging:
      driver: journald
    volumes:
      - /var/lib/solar/postgresql/data:/var/lib/postgresql/data

  mqtt:
    image: ghcr.io/mateusznowakdev/solar/mqtt:1.11.1
    build:
      dockerfile: config/mqtt/Dockerfile
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: any
        delay: 5s
    healthcheck:
      test: [ "CMD-SHELL", "mosquitto_sub -i docker-healthcheck -t solar/json -C 1" ]
      interval: 15s
      timeout: 5s
      retries: 2
    logging:
      driver: journald
    ports:
      - "1883:1883"

  nginx:
    image: ghcr.io/mateusznowakdev/solar/nginx:1.11.1
    build:
      dockerfile: config/nginx/Dockerfile
    deploy:
      restart_policy:
        condition: any
        delay: 5s
    healthcheck:
      test: [ "CMD-SHELL", "
        curl -L -A docker-healthcheck -f http://localhost &&
        curl -L -A docker-healthcheck -f http://localhost/api/" ]
      interval: 15s
      timeout: 5s
      retries: 2
    logging:
      driver: journald
    ports:
      - "80:80"
